### YamlMime:Tutorial
title: Criar máquinas virtuais com a CLI do Azure
metadata:
  title: Criar máquinas virtuais com a CLI do Azure
  description: Inicie a CLI do Azure com a criação de máquinas virtuais.
  audience: Developer
  level: Beginner
  displayType: two-column
  interactive: azurecli
  ms.date: 07/09/2018
  ms.author: dbradish
  author: dbradish-microsoft
  manager: barbkess
  ms.devlang: azure-cli
  ms.topic: tutorial
  ms.prod: azure
  ms.technology: azurecli
  clicktale: true
  ms.openlocfilehash: fb231b99b0f25760b84683d160a63e62c4f36276
  ms.sourcegitcommit: 36e02e96b955ed0531f98b9c0f623f4acb508661
  ms.translationtype: HT
  ms.contentlocale: pt-BR
  ms.lasthandoff: 04/22/2020
  ms.locfileid: "82030938"
items:
- durationInMinutes: 1
  content: >-
    Neste tutorial, você aprenderá todas as etapas envolvidas na configuração de uma máquina virtual com a CLI do Azure. O tutorial também abrange consultas de saída, a reutilização de recursos do Azure e a limpeza de recursos.


    Este tutorial pode ser concluído com a experiência interativa oferecida por meio do Azure Cloud Shell, ou você pode [instalar a CLI](install-azure-cli.md) localmente.


    Use __ctrl-shift-v__ (__cmd-shift-v__ no macOS) para colar o texto do tutorial no Azure Cloud Shell.
- durationInMinutes: 1
  title: Entrar
  content: "Se você estiver usando uma instalação local da CLI, precisará conectar antes de executar qualquer outra etapa.\n\n```azurecli-interactive\naz login\n```\n\nConclua o processo de autenticação seguindo as etapas exibidas no terminal. "
- durationInMinutes: 1
  title: Criar um grupo de recursos
  content: >-
    No Azure, todos os recursos são alocados em um grupo de gerenciamento de recursos. Os grupos de recursos fornecem agrupamentos lógicos de recursos que os tornam mais fáceis de trabalhar como uma coleção. Para este tutorial, todos os recursos criados entram em um único grupo chamado `TutorialResources`.


    ```azurecli

    az group create --name TutorialResources --location eastus

    ```
- durationInMinutes: 4
  title: Criar uma máquina virtual
  content: "As máquinas virtuais no Azure têm um grande número de dependências. A CLI cria esses recursos com base nos argumentos de linha de comando especificados por você.\n\nCrie uma nova máquina virtual executando o Ubuntu, que usa a autenticação SSH para fazer logon.\n\n```azurecli-interactive\naz vm create --resource-group TutorialResources \\\n  --name TutorialVM1 \\\n  --image UbuntuLTS \\\n  --generate-ssh-keys \\\n  --output json \\\n  --verbose \n```\n\n> [!NOTE]\n> Caso já tenha uma chave SSH chamada `id_rsa` disponível, ela será usada para autenticação em vez de ser preciso gerar uma nova chave.\n\nAssim que a VM é criada, você vê os valores locais utilizados e os recursos do Azure sendo criados devido à opção `--verbose`.\nQuando a VM estiver pronta, o JSON será retornado do serviço do Azure, incluindo o endereço IP público.\n\n```json\n{\n  \"fqdns\": \"\",\n  \"id\": \"...\",\n  \"location\": \"eastus\",\n  \"macAddress\": \"...\",\n  \"powerState\": \"VM running\",\n  \"privateIpAddress\": \"...\",\n  \"publicIpAddress\": <PUBLIC_IP_ADDRESS>,\n  \"resourceGroup\": \"TutorialResources\",\n  \"zones\": \"\"\n}\n```\n\nConecte-se via SSH para confirmar que a VM está em execução.\n\n```bash\nssh <PUBLIC_IP_ADDRESS>\n```\n\nContinue e faça logoff da VM.\n\nExistem outras maneiras de obter esse endereço IP depois que a VM for iniciada. Na próxima seção, você verá como obter informações detalhadas sobre a VM e como filtrá-las."
- durationInMinutes: 3
  title: Obter informações de VM com consultas
  content: "Agora que uma VM foi criada, as informações detalhadas sobre ela podem ser recuperadas. O comando comum para obter informações de um recurso é `show`.\n\n```azurecli-interactive\naz vm show --name TutorialVM1 --resource-group TutorialResources\n```\n\nVocê verá muitas informações, cuja análise visual pode ser difícil. O JSON retornado contém informações sobre autenticação, adaptadores de rede, armazenamento e muito mais. Mais importante: ele contém as IDs de objeto do Azure para recursos aos quais a VM está conectada. As IDs de objeto permitem o acesso direto a esses recursos para se obter mais informações sobre a configuração e os recursos da VM. \n\nPara extrair a ID de objeto desejada, é usado o argumento `--query`. As consultas são gravadas na [linguagem de consulta JMESPath](http://jmespath.org). Comece obtendo a ID de objeto do controlador de interface de rede (NIC).\n\n```azurecli-interactive\naz vm show --name TutorialVM1 \\\n  --resource-group TutorialResources \\\n  --query 'networkProfile.networkInterfaces[].id' \\\n  --output tsv\n```\n\nMuita coisa está acontecendo por simplesmente adicionar a consulta. Cada parte dela faz referência a uma chave na saída do JSON, ou é um operador JMESPath.\n\n* `networkProfile` é uma chave JSON de nível superior que tem `networkInterfaces` como uma subchave. Se um valor JSON é um dicionário, suas chaves são referenciadas a partir da chave pai com o operador `.`.\n* O valor `networkInterfaces` é uma matriz, então ele é mesclado com o operador `[]`. Esse operador executa o restante da consulta em cada elemento da matriz. Nesse caso, ele obtém o valor `id` de todos os elementos da matriz.\n\nÉ garantido que o formato de saída `tsv` (valores separados por tabulação) incluirá apenas os dados de resultado e o espaço em branco que consiste em guias e novas linhas.\nUma vez que o valor retornado é uma única cadeia de caracteres vazia, é seguro atribuir diretamente a uma variável de ambiente.\n\nContinue e atribua a ID de objeto do NIC a uma variável de ambiente.\n\n```bash\nNIC_ID=$(az vm show -n TutorialVM1 -g TutorialResources \\\n  --query 'networkProfile.networkInterfaces[].id' \\\n  -o tsv)\n```\n\nEste exemplo também demonstra o uso de argumentos curtos. Você pode usar `-g` em vez de `--resource-group`, `-n` em vez de `--name` e `-o` em vez de `--output`."
- durationInMinutes: 4
  title: Configurar variáveis de ambiente a partir da saída da CLI
  content: >-
    Agora que você tem a ID do NIC, execute `az network nic show` para obter suas informações. Observe que você não precisa de um grupo de recursos aqui, pois o nome do grupo de recursos está contido na ID do recurso do Azure.


    ```azurecli-interactive

    az network nic show --ids $NIC_ID

    ```



    Esse comando mostra todas as informações do adaptador de rede da VM. Entre esses dados estão configurações de DNS, informações de IP, configurações de segurança e o endereço MAC. Nesse momento, a meta é obter o endereço IP público e as IDs de objeto da sub-rede.


    ```azurecli-interactive

    az network nic show --ids $NIC_ID \
      --query '{IP:ipConfigurations[].publicIpAddress.id, Subnet:ipConfigurations[].subnet.id}' \
      -o json
    ```


    ```json

    {
      "IP": [
        "/subscriptions/.../resourceGroups/TutorialResources/providers/Microsoft.Network/publicIPAddresses/TutorialVM1PublicIP"
      ],
      "Subnet": [
        "/subscriptions/.../resourceGroups/TutorialResources/providers/Microsoft.Network/virtualNetworks/TutorialVM1VNET/subnets/TutorialVM1Subnet"
      ]
    }

    ```


    Esse comando exibe um objeto JSON que tem chaves personalizadas ('IP' e 'Sub-rede') para os valores extraídos. Embora esse estilo de saída possa não ser útil para ferramentas de linha de comando, ele ajuda na legibilidade humana e pode ser usado com scripts personalizados.


    Para usar as ferramentas de linha de comando, altere o comando para remover as chaves e a saída do JSON personalizadas como `tsv`. Esse estilo de saída pode ser processado pelo comando `read` do shell para carregar resultados em diversas variáveis. Uma vez que dois valores em linhas separadas são exibidos, o comando delimitador `read` deve ser definido como a cadeia de caracteres vazia em vez do padrão de espaço em branco sem novas linhas.


    ```bash

    read -d '' IP_ID SUBNET_ID <<< $(az network nic show \
      --ids $NIC_ID \
      --query '[ipConfigurations[].publicIpAddress.id, ipConfigurations[].subnet.id]' \
      -o tsv)
    ```


    Você não usará a ID de sub-rede imediatamente, mas agora ela deve ser armazenada para evitar ter de realizar uma segunda pesquisa mais tarde. Por enquanto, use a ID de objeto de IP público para pesquisar o endereço IP público e armazená-lo em uma variável do shell.


    ```bash

    VM1_IP_ADDR=$(az network public-ip show --ids $IP_ID \
      --query ipAddress \
      -o tsv)
    ```


    Agora você tem o endereço IP da VM armazenado em uma variável do shell. Continue e verifique se é o mesmo valor usado por você para se conectar inicialmente à VM.


    ```bash

    echo $VM1_IP_ADDR

    ```
- durationInMinutes: 2
  title: Criando uma nova VM na sub-rede existente
  content: >-
    A segunda VM usa a sub-rede existente. Você pode ignorar agora algumas etapas para obter o endereço IP público da nova VM armazenada em uma variável de ambiente, pois ele é retornado nas informações de criação de VM. Se você precisar de outras informações sobre a VM, elas podem sempre ser obtidas a partir do comando `az vm show`.


    ```bash

    VM2_IP_ADDR=$(az vm create -g TutorialResources \
      -n TutorialVM2 \
      --image UbuntuLTS \
      --generate-ssh-keys \
      --subnet $SUBNET_ID \
      --query publicIpAddress \
      -o tsv)
    ```


    Usando o endereço IP armazenado, SSH para a VM recém-criada.


    ```bash

    ssh $VM2_IP_ADDR

    ```


    Continue e faça logoff da VM.
- durationInMinutes: 2
  title: Limpeza
  content: >-
    Agora que o tutorial está completo, é hora de limpar os recursos criados. Você pode excluir recursos individuais com o comando `delete`, mas a maneira mais segura de remover todos os recursos em um grupo de recursos é com `group delete`.


    ```azurecli-interactive

    az group delete --name TutorialResources --no-wait

    ```


    Esse comando exclui os recursos criados durante o tutorial e é garantido que eles serão desalocados na ordem correta. O parâmetro `--no-wait` evita o bloqueio da CLI enquanto ocorre a exclusão. Se você quiser esperar até que a exclusão seja concluída ou acompanhar o andamento, use o comando `group wait`.


    ```azurecli-interactive

    az group wait --name TutorialResources --deleted

    ```


    Com a limpeza concluída, o tutorial está encerrado. Continue para obter um resumo de tudo o que você aprendeu e links para recursos que ajudarão nas próximas etapas.
- durationInMinutes: 1
  title: Resumo
  content: >-
    Parabéns! Você aprendeu a criar VMs com recursos novos ou existentes, usou argumentos `--query` e `--output` para capturar dados a serem armazenados em variáveis do shell e analisou alguns dos recursos que são criados para VMs do Azure.


    O que você vai fazer a seguir depende de como você planeja usar a CLI. Há uma variedade de materiais que se aprofundam nos recursos abordados neste tutorial.


    ### <a name="samples"></a>Exemplos


    Se você quiser iniciar imediatamente com tarefas específicas, examine alguns scripts de exemplo.


    * Trabalhando com [VMs do Linux](/azure/virtual-machines/linux/cli-samples?toc=%2fcli%2fazure%2ftoc.json) e [VMs do Windows](/azure/virtual-machines/windows/cli-samples?toc=%2fcli%2fazure%2ftoc.json)

    * Trabalhando com [webapps](/azure/app-service/app-service-cli-samples?toc=%2Fcli%2Fazure%2Ftoc.json) e [Azure Functions](/azure/azure-functions/functions-cli-samples?toc=%2fcli%2fazure%2ftoc.json)

    * Trabalhando com bancos de dados – [Bancos de dados SQL do Azure](/azure/sql-database/sql-database-cli-samples?toc=%2fcli%2fazure%2ftoc.json), [PostgreSQL](/azure/postgresql/sample-scripts-azure-cli?toc=%2fcli%2fazure%2ftoc.json), [MySQL](/azure/mysql/sample-scripts-azure-cli?toc=%2fcli%2fazure%2ftoc.json) e [CosmosDB](/azure/cosmos-db/cli-samples?toc=%2fcli%2fazure%2ftoc.json).


    ### <a name="in-depth-cli-documentation"></a>Documentação aprofundada da CLI


    Também há tópicos que se aprofundam nos recursos da CLI que foram mostrados no tutorial.


    * Saiba mais sobre [formatos de saída](format-output-azure-cli.md)

    * Saiba mais sobre [consultas de saída](query-azure-cli.md)

    * Saiba mais sobre a [autorização no Azure](authenticate-azure-cli.md)


    ### <a name="other-useful-documentation"></a>Outras documentações úteis


    Talvez você queira reservar um tempo para explorar recursos mais avançados da CLI, como [padrões de configuração](azure-cli-configuration.md) ou [extensões](azure-cli-extensions-overview.md).


    ### <a name="feedback"></a>Comentários


    Caso queira enviar comentários, sugestões ou perguntas sobre a CLI, há várias maneiras de entrar em contato.


    * `az feedback` é um comando interno para a CLI que permite enviar comentários de formato livre para a equipe.

    * Crie uma solicitação de recurso ou um relatório de erros com a CLI no [repositório da CLI do Azure](https://github.com/Azure/azure-cli).

    * Faça uma pergunta ou obtenha esclarecimentos preenchendo um formulário de problemas no [repositório de documentação da CLI do Azure](https://github.com/MicrosoftDocs/azure-docs-cli/issues).


    Esperamos que você aproveite a CLI do Azure!
